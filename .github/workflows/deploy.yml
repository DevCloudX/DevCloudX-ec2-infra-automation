name: Provision EC2 Instances

on:
  workflow_dispatch:
    inputs:
      aws_access_key:
        description: 'AWS Access Key ID'
        required: true
        type: string
      aws_secret_key:
        description: 'AWS Secret Access Key'
        required: true
        type: string
      key_pair_name:
        description: 'AWS EC2 Key Pair Name'
        required: true
        type: string
      vpc_name:
        description: 'VPC Name'
        required: true
        type: string
      vpc_cidr:
        description: 'VPC CIDR Block (e.g., 10.0.0.0/16)'
        required: true
        type: string
      subnet_name:
        description: 'Subnet Name'
        required: true
        type: string
      subnet_cidr:
        description: 'Subnet CIDR Block (e.g., 10.0.1.0/24)'
        required: true
        type: string
      security_group_name:
        description: 'Security Group Name'
        required: true
        type: string
      ec2_name:
        description: 'Base EC2 Instance Name'
        required: true
        type: string
      vm_count:
        description: 'Number of VMs to Create'
        required: true
        type: number

jobs:
  deploy:
    name: Terraform EC2 Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="aws_access_key=${{ inputs.aws_access_key }}" \
            -var="aws_secret_key=${{ inputs.aws_secret_key }}" \
            -var="key_pair_name=${{ inputs.key_pair_name }}" \
            -var="vpc_name=${{ inputs.vpc_name }}" \
            -var="vpc_cidr=${{ inputs.vpc_cidr }}" \
            -var="subnet_name=${{ inputs.subnet_name }}" \
            -var="subnet_cidr=${{ inputs.subnet_cidr }}" \
            -var="security_group_name=${{ inputs.security_group_name }}" \
            -var="ec2_name=${{ inputs.ec2_name }}" \
            -var="vm_count=${{ inputs.vm_count }}"

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="aws_access_key=${{ inputs.aws_access_key }}" \
            -var="aws_secret_key=${{ inputs.aws_secret_key }}" \
            -var="key_pair_name=${{ inputs.key_pair_name }}" \
            -var="vpc_name=${{ inputs.vpc_name }}" \
            -var="vpc_cidr=${{ inputs.vpc_cidr }}" \
            -var="subnet_name=${{ inputs.subnet_name }}" \
            -var="subnet_cidr=${{ inputs.subnet_cidr }}" \
            -var="security_group_name=${{ inputs.security_group_name }}" \
            -var="ec2_name=${{ inputs.ec2_name }}" \
            -var="vm_count=${{ inputs.vm_count }}"

      - name: Show Public IPs
        run: terraform output public_ips

name: Deploy AWS Infrastructure

on:
  workflow_dispatch:
    inputs:
      vpc_name:
        description: "Name of the VPC"
        required: true
      vpc_cidr:
        description: "CIDR block for the VPC"
        required: true
      subnet_name:
        description: "Name of the Subnet"
        required: true
      subnet_cidr:
        description: "CIDR block for the Subnet"
        required: true
      instance_name:
        description: "Name of the EC2 instance"
        required: true
      instance_type:
        description: "Instance type"
        required: true
        default: "t2.micro"
      volume_size:
        description: "Root volume size in GB"
        required: true
        default: "8"

jobs:
  terraform:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate SSH Key Pair
        run: |
          ssh-keygen -t rsa -b 2048 -f id_rsa -q -N ""
        shell: bash

      - name: Upload Private Key as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: private-key
          path: id_rsa

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Initialize Terraform
        working-directory: infra
        run: terraform init

      - name: Apply Terraform
        working-directory: infra
        env:
          TF_VAR_vpc_name: ${{ github.event.inputs.vpc_name }}
          TF_VAR_vpc_cidr: ${{ github.event.inputs.vpc_cidr }}
          TF_VAR_subnet_name: ${{ github.event.inputs.subnet_name }}
          TF_VAR_subnet_cidr: ${{ github.event.inputs.subnet_cidr }}
          TF_VAR_instance_name: ${{ github.event.inputs.instance_name }}
          TF_VAR_instance_type: ${{ github.event.inputs.instance_type }}
          TF_VAR_volume_size: ${{ github.event.inputs.volume_size }}
        run: terraform apply -auto-approve
